#!/usr/bin/env python
# -*- coding: utf-8 -*-

from terminaltables import AsciiTable
import logging

class BaseExploit(object):
    class Meta:
        vender = {
            "name":"",
            "homepage":"",
        }
        max_effected_version = ""
        cve = (2000, 0)
        authors = [
            {
                "name":"",
                "email":"",
                "homepage":"",
                "twitter":"",
            },
        ]
        references = []
        vulnerability = ""

    option = dict()

    def show_options(self, *args, **kwargs):
    	print("Options: ")
        options_data = [
            ['Option', 'Default', 'Necessity'],
        ]
        for key in sorted(self.option.keys()):
            options_data.append([key, self.get_option(key), self.option[key]["necessity"]])
        print(AsciiTable(options_data).table)

    def set_option(self, key, value):
        if key in self.option.keys():
            self.option[key]["default"] = value
        else:
            logging.error("No such option!")

    def get_option(self, key):
        return self.option[key]["default"]

    def show_info(self, *args, **kwargs):
    	print("Vender: ")
        vender_data = [
            ['Vender', 'Effected Version', 'CVE'],
            [self.Meta.vender["name"], self.Meta.max_effected_version, "CVE-%d-%d" % (self.Meta.cve[0], self.Meta.cve[1])]
        ]
        print(AsciiTable(vender_data).table)

    	print("Author: ")
        author_data = [
            ['Name', 'Email', 'Homepage', 'Twitter'],
        ]
        for author in self.Meta.authors:
            author_data.append([
                author['name'],
                author['email'],
                author['homepage'],
                author['twitter'],
            ])
        print(AsciiTable(author_data).table)

    def run(self, *argc, **argkv):
        try:
            getattr(self, argc[0])(*argc[1:])
        except Exception as e:
            print(repr(e))

    def help(self, *argc, **argkv):
        print argc
        print argkv
        print "Help of module"
        self.show_info()